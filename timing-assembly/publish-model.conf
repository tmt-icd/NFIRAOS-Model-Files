subsystem = NFIRAOS
component = timing

publish {
  events = [

#-----------------------------------------------------------------------

    {
      name            = state
      description     = timing assembly state
      maxRate         = 1
      archive         = true
      attributes      = [
        {
          name        = cmd
          description = "Timing assembly command state. If any trigger signals are enabled, the cmd state will be CONTINUOUS"
          enum        = [ UNINITIALIZED, READY, BUSY, CONTINUOUS ]
        }
        {
          name        = debug
          description = Current debug message level.
          enum        = [ DEBUG, INFO, WARN, ERROR ]
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = cmdStatus
      description     = Recent command status. (engineering)
      maxRate         = 0.1
      archive         = true
      attributes      = [
        {
          name        = cmd
          description = Rrecent command name.
          type        = string
        }
        {
          name        = args
          description = Recent command arguments. Empty string if no arguments are supplied.
          type        = string
        }
        {
          name        = caller
          description = Recent command caller (if available).
          type        = string
        }
        {
          name        = runId
          description = Run ID associated with the recent command.
          type        = integer 
        }
        {
          name        = ack
          description = Recent command acknowledgement status.
          enum        = [ ACCEPTED, REJECTED ]
        }
        {
          name        = ackMsg
          description = Recent command acknowledgement message. Empty string if acknowledgement is ACCEPTED.
          type        = string
        }
        {
          name        = comp
          description = Recent command completion status.
          enum        = [ INPROGRESS, SUCCESS, FAILED, INTERRUPTED, REJECTED ]
        }
        {
          name        = compMsg
          description = Recent command completion message. Empty string if completion is INPROGRESS or SUCCESS.
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = timingGeneratorError
      description     = """Timing generator error occurred while running (state.cmd == CONTINUOUS).

*Notable Event.*
"""
      maxRate         = 20
      maxRate         = 1
      archive         = true
      attributes      = [
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = trigger
      description     = """trigger signal configuration. (engineering)

Arrays are ordered [LGSWFSA, LGSWFSB, LGSWFSC, LGSWFSD, LGSWFSE, LGSWFSF, PWFS, NGSFSM, CHANNEL0, CHANNEL1, CHANNEL2, CHANNEL3, CHANNEL4, CHANNEL5, CHANNEL6, CHANNEL7, CHANNEL8, CHANNEL9, CHANNEL10, CHANNEL11]."""
      maxRate         = 0.1
      archive         = true
      attributes = [
        {
          name        = enable
          description = flag indicating if the trigger channel is enabled
          type        = array
          dimensions: [21]
          items = {
            type      = boolean
          }
        }
        {
          name        = startTime
          description = time of the first trigger pulse
          type        = array
          dimensions: [21]
          items = {
            type      = double
          }
          units       = "TAI / PTP"
        }
        {
          name        = period
          description = period of the trigger signal
          type        = array
          dimensions: [21]
          items = {
            type      = double
          }
          minimum     = 1250
          units       = microseconds
        }
        {
          name        = frequency
          description = frequency of the trigger signal
          type        = array
          dimensions: [21]
          items = {
            type      = double
          }
          maximum     = 80000000
          units       = Hz
        }
        {
          name        = aoPeriod
          description = """fundamental AO period, P<sub>0</sub>"""
          type        = double
          minimum     = 1250
          units       = microseconds
        }
        {
          name        = clockPeriod
          description = "period of the signal generator's clock"
          type        = double
          minimum     = 0.01
          maximum     = 0.1
          units       = microseconds
        }
        {
          name        = clockFrequency
          description = "frequency of the signal generator's clock"
          type        = double
          minimum     = 10
          maximum     = 100
          units       = MHz
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = lgsWfs
      description     = """Configured state of the LGS WFSs."""
      archive         = true
      attributes      = [
          {
          name        = active
          description = """Trigger signal channel associated with active LGS WFSs will be enabled by the enableTrigger command. 

Array is ordered [LGSWFSA, LGSWFSB, LGSWFSC, LGSWFSD, LGSWFSE, LGSWFSF]"""
          type        = array
          dimensions: [6]
          items = {
            type      = boolean
          }
        }
      ]
    }


  ]

#-----------------------------------------------------------------------
#-----------------------------------------------------------------------

  alarms = [

#-----------------------------------------------------------------------
#-----------------------------------------------------------------------

    {
      name = watchdog
      description = "Assembly has become unresponsive"
      severityLevels = [Major]
      location = "TBD..."
      alarmType = Calculated
      probableCause = "Software bug."
      operatorResponse = "__Major__: Re-start the assembly and file a bug report."
      autoAck  = false
      latched = true
    }
  ]

}
