subsystem = NFIRAOS
component = rtc

publish {
  events = [

#-----------------------------------------------------------------------

    {
      name            = state
      description     = "RTC assembly state"
      archive         = true
      attributes      = [
        {
          name        = cmd
          description = "RTC assembly command state"
          enum        = [ UNINITIALIZED, READY, BUSY ]
        }
        {
          name        = mode
          description = "flag indicating if the RTC mode has been configured"
          type        = boolean
        }
        {
          name        = shutdown
          description = "flag indicating if the RTC Assembly has be properly shutdown"
          type        = boolean
        }
        {
          name        = pol
          description = "indicates whether pseudo open-loop (POL) feedback is enabled. When POL is disabled then the uncontrolled mode cleanup path this enabled. Nominally POL will be used in LGS mode and disabled for NGS mode."
          type        = boolean
        }
        {
          name        = rpgDate
          description = "flag indicating if the RTC as all the required data from the RPG to start the pipeline"
          type        = boolean
        }
        {
          name        = lgsBackground
          description = "flag indicating if the LGS background task is currently active"
          type        = boolean
        }
        {
          name        = unsavedConfig
          description = "flag indicating if any configuration parameters have been changed, via the configParamSet or calibLgsBackground, but has not yet been saved."
          type        = boolean
        }
        {
          name        = unsavedLgsSky
          description = "flag indicating if the current LGS sky & instrument backgroundshave been changed, via the calibLgsBackground command, but has not yet been saved."
          type        = boolean
        }
        {
          name        = errMsg
          description = "RTC error description, empty string if there are no errors."
          type        = string
        }
      ]
    }
 
#-----------------------------------------------------------------------

    {
      name            = rpgConnection
      description     = "IP addresses and port numbers for direction connections to the RPG. The IP/port information is represented as a string in the following format XXX.XXX.XXX.XXX:PORT#. If the connection is unavailable the following string will be published 000.000.000.000:000"
      archive         = true
      attributes      = [
        {
          name        = wcc
          description = "IP/port for WCC server endpoint."
          type        = string
        }
        {
          name        = lgsHopA
          description = "IP/port for LGS HOP A server endpoint."
          type        = string
        }
        {
          name        = lgsHopB
          description = "IP/port for LGS HOP B server endpoint."
          type        = string
        }
        {
          name        = lgsHopC
          description = "IP/port for LGS HOP C server endpoint."
          type        = string
        }
        {
          name        = lgsHopD
          description = "IP/port for LGS HOP D server endpoint."
          type        = string
        }
        {
          name        = lgsHopE
          description = "IP/port for LGS HOP E server endpoint."
          type        = string
        }
        {
          name        = lgsHopF
          description = "IP/port for LGS HOP F server endpoint."
          type        = string
        }
        {
          name        = ngsHopA
          description = "IP/port for NGS HOP A server endpoint."
          type        = string
        }
        {
          name        = ngsHopB
          description = "IP/port for NGS HOP B server endpoint."
          type        = string
        }
        {
          name        = ngsHopC
          description = "IP/port for NGS HOP C server endpoint."
          type        = string
        }
        {
          name        = ngsHopD
          description = "IP/port for NGS HOP D server endpoint."
          type        = string
        }
      ]
    }

    {
      name            = turbLgs
      description     = "LGS SLODAR seeing and turbulence, in LGS mode only"
      maxRate         = 0.1
      archive         = true
      attributes      = [
        {
          name        = numLayer
          description = "number of layers"
          type        = integer
          minimum     = 1
          maximum     = 12
        }
        {
          name        = numLayerBin
          description = "number of binned layers"
          type        = integer
          minimum     = 1
          maximum     = 12
        }
        {
          name        = numWfsPair
          description = "number of LGS WFS pairs"
          type        = integer
          minimum     = 1
          maximum     = 15
        }
        {
          name        = wfsPairs
          description = """LGS WFS pairs 

Only the first 'numWfsPair' columns in the matrix will be valid, the remaining columns will be set to zero.
"""
          type        = array
          dimensions: [2,15]
          items = {
            enum      = [ LGSWFSA  LGSWFSB  LGSWFSC  LGSWFSD  LGSWFSE  LGSWFSF ]
          }
        }
        {
          name        = profile
          description = """C<sub>n<sup>2</sup></sub> turbulence profile (p)

Only the first 'numLayer' row in the matrix will be valid, all remaining rows will be set to zero. Rows are ordered from the ground layer up.
"""
          type        = array
          dimensions: [12]
          items = {
            type      = float
          }
          units       = "m<sup>-<sup>5</sup>/<sub>3</sub></sup>"
        }
        {
          name        = profileBin
          description = """Binned C<sub>n<sup>2</sup></sub> turbulence profile (p')

Only the first 'numLayer' row in the matrix will be valid, all remaining rows will be set to zero. Rows are ordered from the ground layer up.
"""
          type        = array
          dimensions: [12]
          items = {
            type      = float
          }
          units       = "m<sup>-<sup>5</sup>/<sub>3</sub></sup>"
        }
        {
          name        = r0
          description = """fried parameter (r<sub>0</sub>)"""
          type        = float
          units       = m
        }
        {
          name        = theta0
          description = """isoplanatic angle (&theta;<sub>0</sub>)"""
          type        = float
          units       = "mas"
        }
        {
          name        = theta2
          description = """generalized isoplanatic angle (&theta;<sub>2</sub>)"""
          type        = float
          units       = mas
        }
        {
          name        = L0
          description = "turbulence outer scale (L<sub>0</sub>)"
          type        = float
          units       = m
        }
        {
          name        = tau0
          description = "coherence time (&tau;<sub>0</sub>)"
          type        = float
          units       = seconds
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = turbNgs
      description     = "NGS seeing and turbulence, in NGS or SL mode only"
      maxRate         = 0.1
      archive         = true
      attributes      = [
         {
          name        = groundLayer
          description = """ground layer turbulence (p)"""
          type        = float
          units       = "m<sup>-<sup>5</sup>/<sub>3</sub></sup>"
        }
        {
          name        = r0
          description = "fried parameter (r<sub>0</sub>)"
          type        = float
          units       = m
        }
        {
          name        = l0
          description = "turbulence outer scale (L<sub>0</sub>)"
          type        = float
          units       = m
        }
        {
          name        = tau0
          description = "coherence time (&tau;<sub>0</sub>)"
          type        = float
          units       = seconds
        }
      ]
    } 
 
#-----------------------------------------------------------------------

    {
      name            = calibWc
      description     = "Wavefront Corrector stream calibration parameters. Arrays are ordered [DM0 DM11 TTS]."
      archive         = false
      attributes      = [
        {
          name        = avg
          description = "number of commands to average before sending the average to the RPG."
          type        = array
          dimensions: [3]
          items = {
            type      = integer
          }
          minimum     = 1
        }
        {
          name        = mode
          description = "flag indicating if RTC is sending averages commands to the RPG."
          type        = array
          dimensions: [3]
          items = {
            enum      = [ STOP, SINGLE, CONTINUOUS ]
          }
        }
        {
          name        = override
          description = "flag indicating if RTC is accepting WC override commands from the RPG, for calibration purposes."
          type        = boolean
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = calibDetector
      description     = "Detector pixel & gradient stream calibration parameters. Arrays are ordered [LGSWFS ODGW OIWFS PWFS]."
      archive         = false
      attributes      = [
        {
          name        = gradAvg
          description = "number of gradient frames to average before sending the average to the RPG."
          minimum     = 1
          type        = array
          dimensions: [4]
          items = {
             type     = integer
          }
        }
        {
          name        = gradMode
          description = "flag indicating if RTC is sending averages gradients to the RPG."
          type        = array
          dimensions: [4]
          items = {
            enum      = [ STOP, SINGLE, CONTINUOUS, WC_SYNC ]
          }
        }
        {
          name        = gradDelay
          description = "The number of gradient frames that is delayed (skipped) while in WC_SYNC mode, see pixelDelay for more details."
          type        = array
          dimensions: [4]
          items = {
            type       = integer
          }
          minimum      = 0
        }

        {
          name        = pixelAvg
          description = "number of pixel frames to average before sending the average to the RPG."
          minimum     = 1
          type        = array
          dimensions: [4]
          items = {
             type     = integer
          }
        }
        {
          name        = pixelMode
          description = "flag indicating if RTC is sending averages pixels to the RPG."
          type        = array
          dimensions: [4]
          items = {
            enum      = [ STOP, SINGLE, CONTINUOUS, WC_SYNC ]
          }
        }
        {
          name        = pixelDelay
          description = "The number of pixel frames that is delayed (skipped) before the starting to average pixel frames, after a WC override command has been applied, while in WC_SYNC mode."
          type        = array
          dimensions: [4]
          items = {
            type       = integer
          }
          minimum      = 0
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = config
      description     = "configuration information"
      archive         = true
      attributes      = [
        {
          name        = name
          description = "current configuration name used to query the TMT Configuration Service"
          type        = string
        }
        {
          name        = version
          description = "current configuration version used to query the TMT Configuration Service"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = mode
      description     = "AO mode configuration information"
      archive         = true
      attributes      = [
        {
          name        = rateHo
          description = "high-order loop rate. In LGS mode this is equal to the LGS WFS frame rate. In NGS or SL mode this is equal to the PWFS frame rate."
          type        = float
          units       = Hz
        }
        {
          name        = rateLo
          description = "low-order loop rate. This is equal to the Tier 1 and 2 steady-state frame rate."
          type        = float
          units       = Hz
        }
        {
          name        = rateLot
          description = "low-order truth loop rate. This is equal to the Tier 3 and 3F steady-state frame rate."
          type        = float
          units       = Hz
        }
        {
          name        = rateWc
          description = "wavefront correction. In LGS mode this should be at least equal to the LGS WFS frame rate (i.e. the high-order rate). In NGS mode this should be at least equal to the PWFS frame rate (i.e. the high-order rate). In SL mode his should be at least to the Tier 1 and 2 steady-state frame rate (i.e. the low-order rate)."
          type        = float
          units       = Hz
        }
        {
          name        = tier1
          description = "Tier 1 detector assignment"
          enum        = [ PWFS, OIWFSA, OIWFSB, OIWFSC ]
        }
        {
          name        = tier2
          description = "Tier 2 detector assignment. The array is ordered Tier 2 [A B]."
          type        = array
          dimensions: [2]
          items = {
            enum      = [ NONE, PWFS, OIWFSA, OIWFSB, OIWFSC, ODGW1, ODGW2, ODGW3, ODGW4 ]
          }
        }
        {
          name        = tier3
          description = "Tier 3 detector assignment. The array is ordered Tier 3 [A B C D]."
          type        = array
          dimensions: [4]
          items = {
            enum      = [ NONE, OIWFSA, OIWFSB, OIWFSC, ODGW1, ODGW2, ODGW3, ODGW4 ]
          }
        }
        {
          name        = tier3f
          description = "Tier 3F detector assignment"
          enum        = [ NONE, OIWFSA, OIWFSB, OIWFSC ]
        }
      ]
    }

#-----------------------------------------------------------------------

    {  
      name            = inst
      description     = """residual instrument field rotation error

      <em>Discussion: During LGS observation and if 3 OIWFS/ODGW are used, the NRTC can compute the residual field rotation error to adjust the position of the IRIS rotator.</em>
      """
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = rot
          description = "residual error field rotation [&delta;&theta;] in the XY plane of the FCRS<sub>174.5</sub>. A positive rotation is defined as counterclockwise from X axis to Y axis."
          type        = double
          units       = degree
          minimum     = -360
          maximum     = 360
        }
        {
          name        = rate
          description = "The rate at which the instrument rotation error is updated."
          type        = float
          minimum     = 0
          maximum     = 20
          units       = Hz
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = lgsFocus
      description     = """LGS drift focus error for the NCC to adjust the position of the LGS trombone mechanism.

*Discussion: The parameter nfiraos.rtc.lgsFocus will be updated at the rate specified by nfiraos.rtc.lgsFocus.rate. When the rate parameter changes all subsequent updates of nfiraos.rtc.lgsFocus will occur at that new rate. A rate of 0 Hz means the RTC will no longer send subsequent offload parameter updates to the NCC. However at some point in future the rate parameter may change again, to a non-zero value, and the offload parameter updates will resume at the new rate.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = error
          description = net LGS drift focus error (z<sub>b</sub>)
          type        = double
          units       = "&mu;m of RMS wavefront error in FCRS<sub>174.5</sub>"
        }
        {
          name        = wfs
          description = "LGS drift focus error per WFS. The arrays is ordered LGS WFS [A B C D E F]. If the LGS WFS is disabled (lgsState.enable = false) then the corresponding focus error term will be set to zero and ignored while producing the net focus error."
          type        = array
          dimensions: [6]
          items = {
            type        = double
          }
          units       = "&mu;m of RMS wavefront error in FCRS<sub>174.5</sub>"
        }
        {
          name        = rate
          description = "the rate at which this drift focus error is updated"
          type        = float
          minimum     = 0
          maximum     = 20
          units       = Hz
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = lgsState
      description     = "LGS state. Arrays are ordered LGS WFS [A B C D E F]."
      archive         = true
      attributes      = [
        {
          name        = enable
          description = flag indicating is LGS WFS has been configured as enabled
          type        = array
          dimensions: [6]
          items = {
            type      = boolean
          }
        }
        {
          name        = fluxHigh
          description = number of high-flux subaps
          type        = array
          dimensions: [6]
          items = {
            type      = integer
          }
          minimum     = 0
        }
        {
          name        = fluxLow
          description = number of low-flux subaps
          type        = array
          dimensions: [6]
          items = {
            type      = integer
          }
          minimum     = 0
        }
        {
          name        = algo
          description = current LGS gradient algorithm
          enum        = [ COG_STATIC, MF_COG, MF_UPDATE, MF_STATIC, CUSTOM, NONE ]
        }
        {
          name        = ttFilter
          description = "current tip/tilt control filter for the LGS TT loop."
          enum        = [ INTEGRATOR, KALMAN ]
        }
        {
          name        = focusFilter
          description = "state of the LGS gradient focus mode filter"
          enum        = [ ALLPASS, NOPASS, LPF ]
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = lgsfPointOffset
      description     = "The mispointing offload value for the LGSF laser launch telescope based on rayleigh backscattering measurements. Arrays are ordered LGS WFS [A B C D E F]."
      maxRate         = 1
      archive         = true
      attributes      = [
        {
          name        = x
          description = x mispointing error
          type        = array
          dimensions: [6]
          items = {
            type      = float
          }
          units       = "arcsec on the sky of x mispointing in FCRS<sub>174.5</sub>"
        }
        {
          name        = y
          description = y mispointing error
          type        = array
          dimensions: [6]
          items = {
            type      = float
          }
          units       = "arcsec on the sky of y mispointing in FCRS<sub>174.5</sub>"
        }

      ]
    }

#-----------------------------------------------------------------------

    {
      name            = loop
      description     = "Control loop states."
      archive         = true
      attributes      = [
        {
          name        = ho
          description = """State of the high-order (HO) wavefront correction loop. 
<ul>
<li> IDLE - HO loop is not active
<li> LOST - at least one active LGS WFS frame is lost, therefore no high-order correction
<li> ACQUIRE - HO loop is active but has not settled (TBC)
<li> LOCK - HO loop has settled
</ul>"""
          enum        = [ IDLE, LOST, ACQUIRE, LOCK ]
        }
        {
          name        = lgsFocus
          description = """State of the LGS Trombone Focus offloading loop.
<ul>
<li> IDLE - RTC is not offloading focus
<li> LOST - a LGS spot can not be  detect on at least one active LGS WFS, therefore no offloading
<li> ACQUIRE - RTC is offloading focus, but focus error is above the configured focus threshold (from config file)
<li> LOCK - RTC is offloading focus and focus error is below the configured focus threshold (from config file)
</ul>"""
          enum        = [ IDLE, LOST, ACQUIRE, LOCK ]
        }
        {
          name        = lgsFocusFilter
          description = """State of the LGS Focus filter applied to the high-order gradients.
<ul>
<li> ALL -
<li> NO - 
<li> LOW - 
</ul>"""
          enum        = [ ALL, NO, LOW ]
        }
        {
          name        = lgsDither
          description = """flag indicating the state of LGS WFS dithering in the RTC. 
<ul>
<li> NONE - the RTC will not dither the DM (LGS purposes) nor the LGSF FSMs.
<li> CP - the RTC is currently applying the CP DM dither signal. This dither signal can be enabled independently of the high and low-order loops (see loop.ho & loop.lo).
<li> NCP - the RTC is currently applying a LGSF FSM dither signal, which can be enabled independently of the LGS TT control loop (see loop.lgsTt)
</ul>"""
          enum        = [ CP, NCP, NONE ]
        }
        {
          name        = lgsTt
          description = """State of the LGS TT control loop that drive the LGSF FSM, this does not include the application of dither signal which can be enabled independently (see published item lgsDither). The array is ordered LGSF FSM [A B C D E F].
<ul>
<li> IDLE - RTC is not sending FSM commands
<li> LOST - FSM command is lost, previous FSM command will be use 
<li> ACQUIRE - RTC is sending FSM commands, but TT error is above the configured TT threshold (from config file)
<li> LOCK - RTC is sending FSM commands and TT error is below the configured TT threshold (from config file)
INACTIVE - the LGS WFS is disabled, therefore a zero command is sent for this LGSF FSM.
</ul>"""
          type        = array
          dimensions: [6]
          items = {
            enum      = [ IDLE, LOST, ACQUIRE, LOCK, INACTIVE ]
          }
        }
        {
          name        = lgsDriftTt
          description = """Flag indicates whether to TT drift terms are added to the LGS TT control loop"""
          type        = boolean
        }
        {
          name        = lo
          description = """Combined state of all low-order tiers, i.e all active low-order and low-order truth detectors, (see loop.tier*). The possible overall states are:
<ul>
<li> IDLE - all LO tiers are IDLE or INACTIVE
<li> LOST - at least one LO tier is LOST
<li> ACQUIRE - at least one LO tier is ACQUIRE, but no LO tier is LOST
<li> DITHER - at least one LO tier is DITHER, but no LO tier is LOST or ACQUIRE 
<li> LOCK_PARTIAL - at least one LO tier is LOCK, all other tiers states are LOCK, IDLE or INACTIVE
<li> LOCK - all tier states are LOCK or INACTIVE
</ul>
The overall state is set following these rules of president (in order):
<ul>
<li> LO state is LOST if any tier state is LOST
<li> LO state is ACQUIRE if any tier state is ACQUIRE
<li> LO state is DITHER if any tier state is DITHER
<li> LO state is LOCK if all tier states are LOCK or INACTIVE
<li> LO state is LOCK_PARTIAL if any tier state is LOCK
<li> else LO state is IDLE
</ul>"""
          enum        = [ IDLE, LOST, ACQUIRE, DITHER, LOCK, LOCK_PARTIAL ]
        }
        {
          name        = loFilter
          description = "current temporal filter type used for each LO mode. The array is ordered LO mode [ Tip, Tilt, Focus, Plate Scale X, Plate Scale Y, Plate Scale 45 ]"
          type        = array
          dimensions: [6]
          items = {
            enum        = [ NONE, TYPE1_ACQ, TYPE1, KALMAN  ]
          }
        }
        {
          name        = oiwfsPoa
          description = """state of the offload to the OIWFS POAs. The array is ordered OIWFS [1 2 3].
<ul>
<li> IDLE - RTC not offloading to OIWFS POA 
<li> LOST - the OIWFS frame is lost, therefore offloading value is set to zero.
<li> ACTIVE - offloading to OIWFS POA 
</ul>"""
          type        = array
          dimensions: [3]
          items = {
            enum      = [ IDLE, LOST, ACTIVE ]
          }
              units       = arcsec
        }
        {
          name        = pwfsDither 
          description = """flag indicating the state of PWFS dithering in the RTC. 
<ul>
<li> NONE - then the RTC will not dither the DM (for PWFS purposes) and will ignore the VNW FSM position stream.
<li> CP - the RTC assumes the VNW FSM is being dither and will listen to the VNW FSM position stream from the NCC for dither signal estimation.
<li> NCP - the RTC is currently applying the CP DM dither signal. This dither signal can be enabled independently of the high and low-order loops.
</ul>"""
          enum        = [ CP, NCP, NONE ]
        }
        {
          name        = pwfsSsm 
          description = """state of the offload to the VNW (i.e. PWFS) SSM.
<ul>
<li> IDLE - RTC not offloading to VNW SSM
<li> LOST - PWFS frame is lost, therefore no offloading value is set to zero.
<li> ACTIVE- offloading to VNW SSM
</ul>"""
          enum        = [ IDLE, LOST, ACTIVE ]
        }
        {
          name        = twfs
          description = """State of the LGS TWFS reference vector update process.
<ul>
<li> IDLE - RTC not update TWFS reference vector
<li> LOST - PWFS frame is lost, therefore no TWFS reference vector updates
<li> DITHER - telescope is dithering, therefore no TWFS reference vector updates
<li> LOCK - guide star lock and TWFS reference vector is being updated
</ul>"""
          enum        = [ IDLE, LOST, DITHER, LOCK ] 
        }
        {
          name        = ready
          description = "A flag indicating if the RTC pipeline is ready to close loops. If TRUE then pixel processing has started and the DMs and TTS are being driven to current shape in the main integrator"
          type        = boolean
        }
        {
          name        = tier0
          description = """State of a PWFS Tier 0 wavefront correction loop
<ul>
<li> IDLE - tier is inactive
<li> LOST - tier frame is lost and not contributing to low-order correction
<li> DITHER - telescope is dithering, tier may be either (re)acquiring or locked on guide star
<li> LOCK - tier is locked on guide star
</ul>"""
          enum        = [ IDLE, LOST, DITHER, LOCK ]
        }
        {
          name        = tier1
          description = """State of a LO Tier 1 wavefront correction loop
<ul>
<li> IDLE - tier is inactive
<li> LOST - tier frame is lost and not contributing to low-order correction
<li> ACQUIRE - tier is (re)acquiring 
<li> DITHER - telescope is dithering, tier may be either (re)acquiring or locked on guide star
<li> LOCK - tier is locked on guide star
</ul>"""
          enum        = [ IDLE, LOST, ACQUIRE, DITHER, LOCK ]
        }
        {
          name        = tier2
          description = """State of a LO Tier 2 wavefront correction loop.The array is ordered Tier 2 [A B].
<ul>
<li> IDLE - tier is not active
<li> LOST - tier frame is lost and not contributing to low-order correction
<li> ACQUIRE - tier is (re)acquiring 
<li> DITHER - telescope is dithering, tier may be either (re)acquiring or locked on guide star
<li> LOCK - tier is locked on guide star
<li> INACTIVE - no detector was specified for this tier, therefore it does no contribute to the low-order loop 
</ul>"""
          type        = array
          dimensions: [2]
          items = {
            enum        = [ IDLE, LOST, ACQUIRE, DITHER, LOCK, INACTIVE ]
          }
        }
        {
          name        = tier3
          description = """State of a LOT Tier 3 wavefront correction loop. The array is ordered Tier 3 [A B C D].
<ul>
<li> IDLE - tier is inactive
<li> LOST - tier frame is lost and not contributing to low-order correction
<li> ACQUIRE - tier is (re)acquiring 
<li> DITHER - telescope is dithering, tier may be either (re)acquiring or locked on guide star
<li> LOCK - tier is locked on guide star
<li> INACTIVE -  no detector was specified for this tier, therefore it does no contribute to the low-order loop 
</ul>"""
          type        = array
          dimensions: [4]
          items = {
            enum        = [ IDLE, LOST, ACQUIRE, DITHER, LOCK, INACTIVE ]
          }
        }
        {
          name        = tier3f
          description = """State of a LOT Tier 3 wavefront correction loop
<ul>
<li> IDLE - tier is inactive
<li> LOST - tier frame is lost and not contributing to low-order correction
<li> ACQUIRE - tier is (re)acquiring 
<li> DITHER - telescope is dithering, tier may be either (re)acquiring or locked on guide star
<li> LOCK - tier is locked on guide star
<li> INACTIVE -  no detector was specified for this tier, therefore it does no contribute to the low-order loop 
</ul>"""
          enum        = [ IDLE, LOST, ACQUIRE, DITHER, LOCK, INACTIVE ]
        }
        {
          name        = m1Scallop
          description = """state of the M1 scalloping mode publishing for the TCS
<ul>
<li> IDLE - The RTC is not publishing m1Scallop   
<li> LOST - The RTC is publishing m1Scallop, but due to lost data/frame the values are set to zero. 
<li> LOCK -The RTC is publishing m1Scallop for offloading to the TCS
</ul>"""
          enum        = [ IDLE, LOST, LOCK ]
        }
        {
          name        = telOffloadTt
          description = """state of the TT telescope offload publishing for the TCS
<ul>
<li> IDLE - The RTC is not publishing telOffloadTt   
<li> LOST - The RTC is publishing telOffloadTt, but due to lost data/frame the values are set to zero. 
<li> LOCK -The RTC is publishing telOffloadTt for offloading to the TCS
</ul>"""
          enum        = [ IDLE, LOST, LOCK ]
        }
        {
          name        = telOffloadFocus
          description = """state of the focus telescope offload publishing for the TCS
<ul>
<li> IDLE - The RTC is not publishing telOffloadFocus   
<li> LOST - The RTC is publishing telOffloadFocus, but due to lost data/frame the values are set to zero. 
<li> LOCK -The RTC is publishing telOffloadFocus for offloading to the TCS
</ul>"""
          enum        = [ IDLE, LOST, LOCK ]
        }
        {
          name        = telOffloadMag
          description = """state of the magnification telescope offload publishing for the TCS
<ul>
<li> IDLE - The RTC is not publishing telOffloadMag   
<li> LOST - The RTC is publishing telOffloadMag, but due to lost data/frame the values are set to zero. 
<li> LOCK -The RTC is publishing telOffloadMag for offloading to the TCS
</ul>"""
          enum        = [ IDLE, LOST, LOCK ]
        }

        {
          name        = telOffloadMode
          description = """state of the telescope mode offload publishing for the TCS
<ul>
<li> IDLE - The RTC is not publishing telOffloadMode   
<li> LOST - The RTC is publishing telOffloadMode, but due to lost data/frame the values are set to zero. 
<li> LOCK -The RTC is publishing telOffloadMode for offloading to the TCS
</ul>"""
          enum        = [ IDLE, LOST, LOCK ]
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = m1Scallop
      description     = """M1 scalloping mode 

*Discussion: The edge sensors of the primary mirror (M1) control system may drift due to temperature or humidity variations during observations. This drift will cause the curvature of M1 to change. The resulting global focus error will be compensated by adjusting the position of M2, and spherical aberration will be corrected by the NFIRAOS deformable mirrors. However, there will still be high spatial frequency residuals called the scalloping mode. Only a modest fraction of this error can be corrected by an order 60x60 AO system like NFIRAOS, but the error can be accurately identified from the pseudo open loop WFS measurement and then off-loaded back to the M1 control.*"""
      maxRate         = 1
      archive         = true
      attributes      = [
        {
          name        = mode 
          description = M1 scalloping mode (m<sub>scall</sub>)
          type        = float
          units       = "RMS nanometer of wavefront in FCRS<sub>174.5</sub>"
        }
        {
          name        = time
          description = timestamp
          type        = double
          units       = "TAI / PTP"
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = odgwImage
      description     = """ODGW image size and rotation.
      
      Arrays are ordered ODGW [1 2 3 4].
      
      The size is defined by the widths of the elliptical Gaussian image, while the rotation defines the angle between the ellipse &sigma;<sub>1</sub> axis and the local probe coordinate system X axis.

      <em>
      The ellipticity information is indicative of ADC errors and is published as a diagnostic or potentially as an error signal to adjust the ADC.
      </em>

      """
      maxRate         = 0.3
      archive         = true
      attributes      = [
        {
          name        = ellip
          description = "ellipticity value based on the averaged spot ellipticity profile, i.e., ratio between &sigma;<sub>1</sub> and &sigma;<sub>2</sub> of the ellipse." 
          type        = array
          dimensions: [4]
          items = {
            type      = float
          }
          units       = pixel
        }
        {
          name        = size1
          description = "image size 1 (&sigma;<sub>1</sub>) based on the averaged spot ellipticity profile, i.e. X axis width of the elliptical Gaussian image in the unrotated elliptical coordinate system."
          type        = array
          dimensions: [4]
          items = {
            type      = float
          }
          units       = pixel
        }
        {
          name        = size2
          description = "image size 2 (&sigma;<sub>2</sub>) based on the averaged spot ellipticity profile, i.e. Y axis width of the elliptical Gaussian image in the unrotated elliptical coordinate system."
          type        = array
          dimensions: [4]
          items = {
            type      = float
          }
          units       = pixel
        }
        {
          name        = rot
          description = "image rotation angle between the unrotated elliptical coordinate system and the local detector coordinate system. This is the angle between the ellipse &sigma;<sub>1</sub> axis (i.e. unrotated X axis) and the local detector coordinate system X axis. A positive rotation is defined as counterclockwise from local detector coordinate system X axis to the Y axis." 
          type        = array
          dimensions: [4]
          items = {
            type      = float
          }
          units       = degree
          minimum     = -360
          maximum     = 360
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = odgwState
      description     = "ODGW state. Arrays are ordered ODGW [1 2 3 4]."
      archive         = true
      attributes      = [
        {
          name        = enable
          description = flag indicating is ODGW has been configured as enabled
          type        = array
          dimensions: [4]
          items = {
            type      = boolean
          }
        }
        {
          name        = fluxHigh
          description = ODGW high-flux flag
          type        = array
          dimensions: [4]
          items = {
            type      = boolean
          }
          minimum     = 0
        }
        {
          name        = fluxLow
          description = ODGW low-flux flag
          type        = array
          dimensions: [4]
          items = {
            type      = boolean
          }
          minimum     = 0
        }
        {
          name        = algo
          description = current ODGW gradient algorithm 
          type        = array
          dimensions: [4]
          items = {
            enum      = [ COG_STATIC, MF_COG, MF_UPDATE, MF_STATIC, BP, CUSTOM, NONE ]
          }
        }
        {
          name        = handOff
          description = "flag indicating if the detector is currently disabled for guide star hand-off"
          type        = array
          dimensions: [4]
          items = {
            type      = boolean
          }
        }
        {
          name        = acqTable
          description = "flag indicating if the acquisition and dither tables have been set in the RTC for the OIWFSs."
          type        = array
          dimensions: [3]
          items = {
            type      = boolean
          }
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = oiwfsImage
      description     = """OIWFS image size and rotation.
      
      The size is defined by the widths of the elliptical Gaussian image, while the rotation defines the angle between the ellipse &sigma;<sub>1</sub> axis and the local probe coordinate system X axis.

      Arrays are ordered OIWFS [1 2 3].

      <em>
      Discussion: NFIRAOS will provide these inputs to the OIWFS Component Controller to verify and/or adjust the position of the OIWFS ADCs.
      </em>
      """
      maxRate         = 0.3
      archive         = true
      attributes      = [
        {
          name        = ellip
          description = "ellipticity value based on the averaged spot ellipticity profile, i.e., ratio between &sigma;<sub>1</sub> and &sigma;<sub>2</sub> of the ellipse."
          type        = array
          dimensions: [3]
          items = {
            type      = float
          }
          units       = pixel
        }
        {
          name        = size1
          description = "image size 1 (&sigma;<sub>1</sub>) based on the averaged spot ellipticity profile, i.e. X axis width of the elliptical Gaussian image in the unrotated elliptical coordinate system."
          type        = array
          dimensions: [3]
          items = {
            type      = float
          }
          units       = pixel
        }
        {
          name        = size2
          description = "image size 2 (&sigma;<sub>2</sub>) based on the averaged spot ellipticity profile, i.e. Y axis width of the elliptical Gaussian image in the unrotated elliptical coordinate system."
          type        = array
          dimensions: [3]
          items = {
            type      = float
          }
          units       = pixel
        }
        {
          name        = rot
          description = "image rotation angle between the unrotated elliptical coordinate system and the local detector coordinate system. This is the angle between the ellipse &sigma;<sub>1</sub> axis (i.e. unrotated X axis) and the local detector coordinate system X axis. A positive rotation is defined as counterclockwise from local detector coordinate system X axis to the Y axis." 
          type        = array
          dimensions: [3]
          items = {
            type      = float
          }
          units       = degree
          minimum     = -360
          maximum     = 360
        }
      ]
    }
    
    {
      name            = oiwfs1Poa
      description     = """OIWFS 1 POA offset (o<sub>POA</sub>).
      
      The NRTC publishes OIWFS residual probe position error values when performing probe offloading.

      <em>
      Discussion: The primary use case for probe offloading is observing modes for which low-frequency TT truth is determined exclusively from ODGWs; residual errors reflect drifts in the OIWFS probes with respect to the IRIS Imager in this case.

      Discussion: Probe offloading will be used for calibration purposes so that the NRTC can directly position the probes over calibration sources itself.

      Discussion: Probe offloading may be useful while performing closed-loop dithering with the probes. If there is a large error between the TCS position demands and the actual guide star locations, residual pointing errors may saturate the NFIRAOS TTS. In this case, this offloading mechanism may be used to “self-guide” the probes, keeping the loops closed.

      Discussion: The parameter nfiraos.rtc.oiwfs1Poa will be updated at the rate specified by nfiraos.rtc.oiwfs1Poa.rate. When the rate parameter changes all subsequent updates of nfiraos.rtc.oiwfs1Poa will occur at that new rate. A rate of 0 Hz means the NRTC will no longer send subsequent offload parameter updates to IRIS. However at some point in future the rate parameter may change again, to a non-zero value, and the offload parameter updates will resume at the new rate. This rate will depend on the steady-state rate of low-order TT rate in the NRTC.
      </em>

      """
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = tip
          description = "OIWFS 1 tip error in FCRS<sub>174.5</sub>"
          type        = double
          units       = arcsec
        }
        {
          name        = tilt
          description = "OIWFS 1 tilt error in FCRS<sub>174.5</sub>"
          type        = double
          units       = arcsec
        }
        {
          name        = rate
          description = "The rate at which the OIWFS 1 tip/tilt errors offloading parameter is updated."
          type        = float
          minimum     = 0
          maximum     = 20
          units       = Hz
        }
      ]
    }

    {
      name            = oiwfs2Poa
      description     = """OIWFS 2 POA offset (o<sub>POA</sub>).
      
      The NRTC publishes OIWFS residual probe position error values when performing probe offloading.

      <em>
      Discussion: See discussion and full description of equivalent attributes in oiwfs1Poa.
      </em>

      """
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = tip
          description = "OIWFS 2 tip error in FCRS<sub>174.5</sub>"
          type        = double
          units       = arcsec
        }
        {
          name        = tilt
          description = "OIWFS 2 tilt error in FCRS<sub>174.5</sub>"
          type        = double
          units       = arcsec
        }
        {
          name        = rate
          description = "The rate at which the OIWFS 2 tip/tilt errors offloading parameter is updated."
          type        = float
          minimum     = 0
          maximum     = 20
          units       = Hz
        }
      ]
    }

    {
      name            = oiwfs3Poa
      description     = """OIWFS 3 POA offset (o<sub>POA</sub>).
      
      The NRTC publishes OIWFS residual probe position error values when performing probe offloading.

      <em>
      Discussion: See discussion and full description of equivalent attributes in oiwfs1Poa.
      </em>

      """
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = tip
          description = "OIWFS 3 tip error in FCRS<sub>174.5</sub>"
          type        = double
          units       = arcsec
        }
        {
          name        = tilt
          description = "OIWFS 3 tilt error in FCRS<sub>174.5</sub>"
          type        = double
          units       = arcsec
        }
        {
          name        = rate
          description = "The rate at which the OIWFS 3 tip/tilt errors offloading parameter is updated."
          type        = float
          minimum     = 0
          maximum     = 20
          units       = Hz
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = oiwfsState
      description     = "OIWFS state. Arrays are ordered OIWFS [A B C]."
      archive         = true
      attributes      = [
        {
          name        = enable
          description = flag indicating is OIWFS has been configured as enabled
          type        = array
          dimensions: [3]
          items = {
            enum      = [ NONE TT VNW ]
          }
        }
        {
          name        = fluxHigh
          description = OIWFS high-flux flag
          type        = array
          dimensions: [3]
          items = {
            type      = boolean
          }
        }
        {
          name        = fluxLow
          description = OIWFS low-flux flag
          type        = array
          dimensions: [3]
          items = {
            type      = boolean
          }
        }
        {
          name        = algo
          description = current OIWFS gradient algorithm 
          type        = array
          dimensions: [3]
          items = {
            enum      = [ COG_STATIC, MF_COG, MF_UPDATE, MF_STATIC, BP, CUSTOM, NONE ]
          }
        }
        {
          name        = handOff
          description = "flag indicating if the detector is currently disabled for guide star hand-off"
          type        = array
          dimensions: [3]
          items = {
            type      = boolean
          }
        }
        {
          name        = acqTable
          description = "flag indicating if the acquisition and dither tables have been set in the RTC for the OIWFSs."
          type        = array
          dimensions: [3]
          items = {
            type      = boolean
          }
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = sim
      description     = simulate connections flags.
      archive         = true
      attributes      = [
       {
          name        = dm0
          description = "DM0 simulated connection flag. If set then commands are sent to the simulator IP/port instead of the DM0 IP/port."
          type        = boolean
        }
        {
          name        = dm11
          description = "DM11 simulated connection flag. If set then commands are sent to the simulator IP/port instead of the DM11 IP/port."
          type        = boolean
        }
        {
          name        = lgs
          description = "LGS WFS pixel simulated connection flag. If set then pixels are processed from to the simulator port instead of the real LGS WFS port."
          type        = boolean
        }
        {
          name        = lgsf
          description = "LGSF simulated connection flag. If set then commands are sent to the simulator IP/port instead of the LGSF IP/port."
          type        = boolean
        }
        {
          name        = odgw
          description = "ODGW pixel simulated connection flag. If set then pixels are processed from to the simulator port instead of the real ODGW port. The array is ordered ODGW [1 2 3 4]."
          type        = array
          dimensions: [4]
          items = {
            type     = boolean
          }
        }
        {
          name        = oiwfs
          description = """OIWFS pixel simulated connection flag.
          
          If set then pixels are processed from to the simulator port instead of the real OIWFS port. The array is ordered OIWFS [1 2 3].
          """
          type        = array
          dimensions: [3]
          items = {
            type     = boolean
          }
        }
        {
          name        = pwfs
          description = "PWFS pixel simulated connection flag. If set then pixels are processed from to the simulator port instead of the real PWFS port."
          type        = boolean
        }
        {
          name        = rpg
          description = "RPG simulated connection flag. If set then RTC will communicate with the simulated RPG IP/port specified in the configuration file."
          type        = boolean
        }

        {
          name        = tts
          description = "TTS simulated connection flag. If set then commands are sent to the simulator IP/port instead of the TTS IP/port."
          type        = boolean
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = psfrDataReady
      description     = """An event signalling the PSFR that new data is ready to be processed"""
      attributes      = [
        {
          name        = id 
          description = "TBD identifier of PSFR data chunk"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = pupilCentError
      description     = """Telescope pupil centering error due to telescope and NFIRAOS misalignment as measured by the PWFS

*Discussion: Telescope and NFIRAOS misalignments will shift the pupil position on DM0, and will be detected by the illumination on the PWFS. The measured pupil shift is published by the NRTC for the TCS so that the TCS can adjust the positioning of M2 and M3 accordingly.*

*Discussion: The expected pupil shift cause by the VNW ADC will be corrected internally in the NCC by adjusting the VNW SSM.*

*Discussion: The parameter nfiraos.rtc.pupilCentError will be updated at the rate specified by nfiraos.rtc.pupilCentError.rate which is equal to the PWFS frame rate or 20 Hz, whichever is less. When the rate parameter changes all subsequent updates of nfiraos.rtc.pupilCentError will occur at that new rate. A rate of 0 Hz means the RTC will no longer send subsequent offload parameter updates to the TCS. However at some point in future the rate parameter may change again, to a non-zero value, and the offload parameter updates will resume at the new rate.*"""
      maxRate         = 1
      archive         = true
      attributes      = [
        {
          name        = x 
          description = "shift of the TMT pupil in the x-direction due to misalignments"
          type        = double
          minimum     = 0
          maximum     = 0.50
          units       = "fraction of pupil diameter in FCRS<sub>174.5</sub>"
        }
        {
          name        = y 
          description = "shift of the TMT pupil in the y-direction due to misalignments"
          type        = double
          minimum     = 0
          maximum     = 0.50
          units       = "fraction of pupil diameter in FCRS<sub>174.5</sub>"
        }
        {
          name        = rate
          description = "The rate at which this telescope pupil shift misalignment parameter is updated. This rate will be equal to minimum of the PWFS frame rate and 20 Hz."
          type        = float
          minimum     = 0
          maximum     = 20
          units       = Hz
        }
        {
          name        = time
          description = timestamp
          type        = double
          units       = "TAI / PTP"
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = pwfsTtf
      description     = "low-pass filtered PWFS tip/tilt/focus error for the NCC to adjust the position of the visible path SSM"
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = tip
          description = PWFS tip error
          type        = double
          units       = "Arcsec on the sky in FCRS<sub>174.5</sub>"
        }
        {
          name        = tilt
          description = PWFS tilt error
          type        = double
          units       = "Arcsec on the sky in FCRS<sub>174.5</sub>"
        }
        {
          name        = focus
          description = PWFS focus error
          type        = double
          units       = "&mu;m of RMS wavefront error in FCRS<sub>174.5</sub>"
        }
        {
          name        = rate
          description = "The rate at which the PWFS tip/tilt/focus errors offloading parameter is updated"
          type        = float
          minimum     = 0
          maximum     = 20
          units       = Hz
        }
      ]
    }
    
#-----------------------------------------------------------------------

    {
      name            = pwfsState
      description     = "PWFS state."
      archive         = true
      attributes      = [
        {
          name        = pwfsBin
          description = "width of PWFS bin in pixels" 
          enum        = [ 1, 2, 4, 8, 16, 32 ]
        }
        {
          name        = fluxHigh
          description = number of high-flux subaps (where a subap is a set of four quadrant pixels)
          type        = integer
          minimum     = 0
        }
        {
          name        = fluxLow
          description = number of low-flux subaps (where a subap is a set of four quadrant pixels)
          type        = integer
          minimum     = 0
        }
        {
          name        = algo
          description = current PWFS gradient algorithm
          enum        = [ COG_STATIC, GOG_UPDATE, CUSTOM, NONE ]
        }
        {
          name        = opticalGain
          description = """current PWFS optical gain, ordered [x, y]. If the scalar optical gain optimization algorithm is specified in the RTC Assembly configuration file, then both values in the array will be equal."""
          type        = array
          dimensions: [2]
          items = {
             type     = double
          }
        }
        {
          name        = handOff
          description = "flag indicating if the detector is currently disabled for guide star hand-off"
          type        = boolean
        }
        {
          name        = telDitherFlag
          description = "flag indicating if PWFS thinks the telescope is dithering or not"
          type        = boolean
        }
        {
          name        = telDitherGain
          description = "gain applied to the PWFS gradients while the telescope is performing a dither"
          type        = float
          minimum     = 0
          maximum     = 1
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = telOffloadTt
      description     = """tip/tilt telescope offloading

*Discussion: The NFIRAOS RTC computes the tilt modes (defined in the Noll Zernike basis) based on the TTS. The tilt modes are offloaded and then rotated to the telescope mount control system by the TCS.*

*Discussion: The parameter nfiraos.rtc.telOffloadTt will be updated at the rate specified by nfiraos.rtc.telOffloadTt.rate. When the rate parameter changes all subsequent updates of nfiraos.rtc.telOffloadTt will occur at that new rate. A rate of 0 Hz means the RTC will no longer send subsequent offload parameter updates to the TCS. However at some point in future the rate parameter may change again, to a non-zero value, and the offload parameter updates will resume at the new rate. Different modes (LGS & NGS AO and seeing limited) will have different rates*"""
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = x
          description = tip mode
          type        = float
          units       = "Arcsec on the sky in FCRS<sub>174.5</sub>"
        }
        {
          name        = y
          description = tilt mode
          type        = float
          units       = "Arcsec on the sky in FCRS<sub>174.5</sub>"
        }
        {
          name        = rate
          description = "the rate at which this telescope TT offloading parameter is updated"
          type        = float
          minimum     = 0
          maximum     = 20
          units       = Hz
        }
        {
          name        = time
          description = timestamp
          type        = double
          units       = "TAI / PTP"
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = telOffloadFocus
      description     = """focus telescope offloading

*Discussion: The NFIRAOS RTC computes the focus mode (defined in the Noll Zernike basis) based on the DM commands. The focus mode is offloaded and then rotated to the telescope M2 control system by the TCS.*

*Discussion: The parameter nfiraos.rtc.telOffloadFocus will be updated at the rate specified by nfiraos.rtc.telOffloadFocus.rate. When the rate parameter changes all subsequent updates of nfiraos.rtc.telOffloadFocus will occur at that new rate. A rate of 0 Hz means the RTC will no longer send subsequent offload parameter updates to the TCS. However at some point in future the rate parameter may change again, to a non-zero value, and the offload parameter updates will resume at the new rate. Different modes (LGS & NGS AO and seeing limited) will have different rates.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = focus
          description = focus mode
          type        = float
          units       = "&mu;m of WFE RMS in FCRS<sub>174.5</sub>"
        }
        {
          name        = rate
          description = "the rate at which this telescope focus offloading parameter is updated"
          type        = float
          minimum     = 0
          maximum     = 20
          units       = Hz
        }
        {
          name        = time
          description = timestamp
          type        = double
          units       = "TAI / PTP"
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = telOffloadMag
      description     = """magnification telescope offloading (TBC)

*Discussion: In LGS WFS mode in which 3 OIWFSs or ODGWs are used, the NFIRAOS RTC computes the magnification plate scale mode (created by a combination of telescope M1 curvature and telescope M2 focus) based on the DM0 and DM11 commands. The magnification error is then offloaded to the telescope M1 and M2 control system by the TCS. Positive values mean that the image is too large. In NGS of Seeing Limited mode the offload magnification error will nominally be disabled.*

*Discussion: The parameter nfiraos.rtc.telOffloadMag will be updated at the rate specified by nfiraos.rtc.telOffloadMag.rate. When the rate parameter changes all subsequent updates of nfiraos.rtc.telOffloadMag will occur at that new rate. A rate of 0 Hz means the RTC will no longer send subsequent offload parameter updates to the TCS. However at some point in future the rate parameter may change again, to a non-zero value, and the offload parameter updates will resume at the new rate. Different modes (LGS & NGS AO and seeing limited) will have different rates.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = magnification
          description = """The magnification plate scale error is relative to the telescope prescription.""" 
          type        = float
          minimum     = -0.01
          maximum     = 0.01
          units       = "fractional error of image scale relative to the designed telescope prescription"
        }
        {
          name        = rate
          description = "the rate at which this telescope magnification offloading parameter is updated"
          type        = float
          minimum     = 0
          maximum     = 20
          units       = Hz
        }
        {
          name        = time
          description = timestamp
          type        = double
          units       = "TAI / PTP"
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = telOffloadMode
      description     = """mode telescope offloading

The NFIRAOS RTC computes the coma modes and additional M1 telescope modes (defined in the Noll Zernike basis) based on the DM commands.

*Discussion: The coma modes are offloaded and then rotated to the telescope M2 control system by the TCS.*

*Discussion: The parameter nfiraos.rtc.telOffloadMode will be updated at the rate specified by nfiraos.rtc.telOffloadMode.rate. When the rate parameter changes all subsequent updates of nfiraos.rtc.telOffloadMode will occur at that new rate. A rate of 0 Hz means the RTC will no longer send subsequent offload parameter updates to the TCS. However at some point in future the rate parameter may change again, to a non-zero value, and the offload parameter updates will resume at the new rate. Different modes (LGS & NGS AO and seeing limited) will have different rates.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = comaX
          description = "x coma mode"
          type        = float
          units       = "&mu;m of WFE RMS in FCRS<sub>174.5</sub>"
        }
        {
          name        = commaY
          description = "y coma mode"
          type        = float
          units       = "&mu;m of WFE RMS in FCRS<sub>174.5</sub>"
        }
        {
          name        = m1
          description = """M1 modes

*Discussion: The NFIRAOS RTC computes the M1 modes (defined in the Noll Zernike basis, but excluding piston, tilt, focus and coma modes) based on the DM0 commands. The M1 modes are offloaded and then rotated to the telescope M1 control system by the TCS. In LGS and NGS modes up to approximately 100 M1 modes are offloaded. In seeing limited mode, only up to the 5th order radial modes are offloaded, zero-padded up to the full vector length.*"""
          type = array
          dimensions: [100]
          items = {
             type     = float
          }
          units       = "nm of RMS wavefront error in FCRS<sub>174.5</sub>"
        }
        {
          name        = rate
          description = "the rate at which this telescope TT offloading parameter is updated"
          type        = float
          minimum     = 0
          maximum     = 20
          units       = Hz
        }
        {
          name        = time
          description = timestamp
          type        = double
          units       = "TAI / PTP"
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = virginzie
      description     = """Current configured virginization parameters.

These values are specified in the RTC Assembly configuration file."""
      archive         = false
      attributes      = [
        {
          name        = amplitude
          description = "Initial amplitude of the DM virginization sinusoid"
          type        = float
          units       = "&mu;m OPD RMS"
        }
        {
          name        = decay
          description = "decay constant of the DM virginization sinusoid"
          type        = float
          units       = Hz
        }
        {
          name        = frequency  
          description = "Frequency of the DM virginization sinusoid"
          type        = float
          units       = Hz
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = pipelineDelay
      description     = """Part or all of the RTC pipeline is running slow

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }
  
    {
      name            = pwfsDitherTimeout
      description     = """Timed out while waiting for PWFS injected dither signal.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = lotLost
      description     = """Lost all LOT modes.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

   {
      name            = lotfLost
      description     = """Lost LOT focus.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = lotDegrade
      description     = """Lost some LOT modes.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = loLost
      description     = """Lost all LO modes.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }
    
#-----------------------------------------------------------------------

    {
      name            = loDegrade
      description     = """Lost some LO modes.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = loPwfsLost
      description     = """Lost LO PWFS (Tier 0).

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = loCorrectionLost
      description     = """Lost LO correction.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = hoCorrectionLost
      description     = """Lost HO correction.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = loErrVectLost
      description     = """Lost LO error vector.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = hoErrVectLost
      description     = """Lost HO error vector.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = ttsSenseLost
      description     = """Lost TTS feedback.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = dm0Clip
      description     = """Excessive clipping on DM0.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = dm11Clip
      description     = """Excessive clipping on DM11.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

   {
      name            = lgsTtConvergeError
      description     = """LGS TT error has not converged in the expected amount of time.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
         {
          name        = hop
          description = "HOP server that triggered the Notable Event"
          enum        = [A, B, C, D, E, F]
        }
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = lgsFocusConvergeError
      description     = """LGS focus error has not converged in the expected amount of time.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
         {
          name        = hop
          description = "HOP server that triggered the Notable Event"
          enum        = [A, B, C, D, E, F]
        }
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = lgsTtCorrectionLost
      description     = """Lost LGS TT correction.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
         {
          name        = hop
          description = "HOP server that caused the Notable Event"
          enum        = [A, B, C, D, E, F]
        }
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = lgsTtSenseLost
      description     = """Lost LGS TT feedback.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = lgsFocusCorrectionLost
      description     = """Lost LGS focus correction.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
         {
          name        = hop
          description = "HOP server that caused the Notable Event"
          enum        = [A, B, C, D, E, F]
        }
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = lgsPolGradLost
      description     = """Lost LGS POL gradient feedback.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
         {
          name        = hop
          description = "HOP server that caused the Notable Event"
          enum        = [A, B, C, D, E, F]
        }
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = lgsDmShapeLost
      description     = """Lost LGS DM shape feedback.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
         {
          name        = hop
          description = "HOP server that caused the Notable Event"
          enum        = [A, B, C, D, E, F]
        }
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = pwfsGradMissing
      description     = """At least one PWFS gradient UDP datagram was missing from the frame.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
         {
          name        = hop
          description = "HOP server that triggered the Notable Event"
          enum        = [A, B, C, D]
        }
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = pwfsGradOrder
      description     = """At least one PWFS gradient UDP datagram was received out of order.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
         {
          name        = hop
          description = "HOP server that triggered the Notable Event"
          enum        = [A, B, C, D]
        }
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = pwfsGradCrc
      description     = """A bad CRC was detected in at least one PWFS gradient UDP datagram.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
         {
          name        = hop
          description = "HOP server that triggered the Notable Event"
          enum        = [A, B, C, D]
        }
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = dmVectMissing
      description     = """At least one HO DM vector UDP datagram was missing from the frame.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
         {
          name        = hop
          description = "HOP server that caused the Notable Event"
          enum        = [A, B, C, D, E, F]
        }
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = dmVectOrder
      description     = """At least one HO DM vector UDP datagram was received out of order.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
         {
          name        = hop
          description = "HOP server that caused the Notable Event"
          enum        = [A, B, C, D, E, F]
        }
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = dmVectCrc
      description     = """A bad CRC was detected in at least one HO DM vector UDP datagram.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
         {
          name        = hop
          description = "HOP server that caused the Notable Event"
          enum        = [A, B, C, D, E, F]
        }
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = guardRow
      description     = """Guide star detected in OIWFS / ODGW guard row.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
         {
          name        = detector
          description = "Detector that triggered the Notable Event"
          enum        = [OIWFSA, OIWFSB, OIWFSC, ODGW1, ODGW2, ODGW3, ODGW4]
          }
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = lowFlux
      description     = """Insufficient flux detected on a detector.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
         {
          name        = detector
          description = "Detector that triggered the Notable Event"
          enum        = [LGSWFSA, LGSWFSB, LGSWFSC, LGSWFSD, LGSWFSE, LGSWFSF, PWFS, OIWFSA, OIWFSB, OIWFSC, ODGW1, ODGW2, ODGW3, ODGW4]
          }
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = pixelMissing
      description     = """At least one pixel UDP datagram was missing from the frame.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
         {
          name        = detector
          description = "Detector that triggered the Notable Event"
          enum        = [LGSWFSA, LGSWFSB, LGSWFSC, LGSWFSD, LGSWFSE, LGSWFSF, PWFS, OIWFSA, OIWFSB, OIWFSC, ODGW1, ODGW2, ODGW3, ODGW4]
        }
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = pixelOrder
      description     = """At least one pixel UDP datagram was received out of order.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
          {
          name        = detector
          description = "Detector that triggered the Notable Event"
          enum        = [LGSWFSA, LGSWFSB, LGSWFSC, LGSWFSD, LGSWFSE, LGSWFSF, PWFS, OIWFSA, OIWFSB, OIWFSC, ODGW1, ODGW2, ODGW3, ODGW4]
        }
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = pixelCrc
      description     = """A bad CRC was detected in at least one pixel UDP datagram.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
          {
          name        = detector
          description = "Detector that triggered the Notable Event"
          enum        = [LGSWFSA, LGSWFSB, LGSWFSC, LGSWFSD, LGSWFSE, LGSWFSF, PWFS, OIWFSA, OIWFSB, OIWFSC, ODGW1, ODGW2, ODGW3, ODGW4]
        }
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

  ]

#-----------------------------------------------------------------------
#-----------------------------------------------------------------------

  alarms = [

#-----------------------------------------------------------------------

    {
      name = watchdog
      description = "Assembly has become unresponsive "
      severityLevels = [Major]
      location = "TBD..."
      alarmType = Calculated
      probableCause = " Software bug. "
      operatorResponse = "__Major__:  Re-start the assembly and file a bug report. "
      autoAck  = false
      latched = true
    }

#-----------------------------------------------------------------------

    {
      name = pipelineDelay
      description = " Part or all of the RTC pipeline is running slow "
      severityLevels = [Warning]
      location = "TBD..."
      alarmType = Calculated
      probableCause = "TBD..."
      operatorResponse = "TBD..."
      autoAck  = false
      latched = true
    }

#-----------------------------------------------------------------------

    {
      name = pipelineFault
      description = " Part or all of the RTC pipeline is not running "
      severityLevels = [Major]
      location = "TBD..."
      alarmType = Calculated
      probableCause = "TBD..."
      operatorResponse = "TBD..."
      autoAck  = false
      latched = true
    }

#-----------------------------------------------------------------------

    {
      name = ted
      description = " TED software not running "
      severityLevels = [Major]
      location = "TBD..."
      alarmType = Calculated
      probableCause = "TBD..."
      operatorResponse = "TBD..."
      autoAck  = false
      latched = true
    }

#-----------------------------------------------------------------------

    {
      name = wcc
      description = " WCC software not running "
      severityLevels = [Major]
      location = "TBD..."
      alarmType = Calculated
      probableCause = "TBD..."
      operatorResponse = "TBD..."
      autoAck  = false
      latched = true
    }

#-----------------------------------------------------------------------

    {
      name = hopA
      description = " HOP A software not running "
      severityLevels = [Major]
      location = "TBD..."
      alarmType = Calculated
      probableCause = "TBD..."
      operatorResponse = "TBD..."
      autoAck  = false
      latched = true
    }

#-----------------------------------------------------------------------

    {
      name = hopB
      description = " HOP B software not running "
      severityLevels = [Major]
      location = "TBD..."
      alarmType = Calculated
      probableCause = "TBD..."
      operatorResponse = "TBD..."
      autoAck  = false
      latched = true
    }

#-----------------------------------------------------------------------

    {
      name = hopC
      description = " HOP C software not running "
      severityLevels = [Major]
      location = "TBD..."
      alarmType = Calculated
      probableCause = "TBD..."
      operatorResponse = "TBD..."
      autoAck  = false
      latched = true
    }

#-----------------------------------------------------------------------

    {
      name = hopD
      description = " HOP D software not running "
      severityLevels = [Major]
      location = "TBD..."
      alarmType = Calculated
      probableCause = "TBD..."
      operatorResponse = "TBD..."
      autoAck  = false
      latched = true
    }

#-----------------------------------------------------------------------

    {
      name = hopE
      description = " HOP E software not running "
      severityLevels = [Major]
      location = "TBD..."
      alarmType = Calculated
      probableCause = "TBD..."
      operatorResponse = "TBD..."
      autoAck  = false
      latched = true
    }

#-----------------------------------------------------------------------

    {
      name = hopF
      description = " HOP F software not running "
      severityLevels = [Major]
      location = "TBD..."
      alarmType = Calculated
      probableCause = "TBD..."
      operatorResponse = "TBD..."
      autoAck  = false
      latched = true
    }

#-----------------------------------------------------------------------

    {
      name = rtsG
      description = " RTS/G software not running "
      severityLevels = [Major]
      location = "TBD..."
      alarmType = Calculated
      probableCause = "TBD..."
      operatorResponse = "TBD..."
      autoAck  = false
      latched = true
    }

#-----------------------------------------------------------------------

    {
      name = rtsL
      description = " RTS/L software not running "
      severityLevels = [Major]
      location = "TBD..."
      alarmType = Calculated
      probableCause = "TBD..."
      operatorResponse = "TBD..."
      autoAck  = false
      latched = true
    }
  ] 
  
}
