subsystem = NFIRAOS
component = encl

publish {
 
  events = [

#-----------------------------------------------------------------------
    
    {
      name            = state
      description     = ENCL assembly state
      maxRate         = 1
      archive         = true
      attributes      = [
        {
          name        = cmd
          description = "ENCL assembly command state."
          enum        = [ UNINITIALIZED, READY, BUSY ]
        }
        {
          name        = refrigeration
      	  description = "Enclosure refrigeration status indicating what operational mode it is running under."
      	  enum        = [ COLD, COOLING, WARM, WARMING, ERROR, UNKNOWN ]
        }
        {
          name	      = accessibility
          description = "Current personnel accessibility level."
          enum        = [ ACCESSIBLE, RESTRICTED ]
        }
        {
          name	      = quiet
          description = "The optical enclosure is current running in quiet mode.  If true, no vibration activities are permitted."
          enum	      = [ TRUE, FALSE ]
        }
        {
          name        = standby
          description = "Standby indicates that the enclosure is running on a low power mode and is conserving electrical and cooling power."
          enum 	      = [ TRUE, FALSE ]
        }
        {
          name        = engineeringMode
          description = Indicated whether engineering mode is enabled or disabled.
          enum        = [ ON, OFF ]
        }
        {
          name        = debug
          description = Current debug message level.
          enum        = [ DEBUG, INFO, WARN, ERROR ]
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = operationalConditions
      description     = """The operational conditions of the refrigeration controller used to inform external components information related to the internal operation (internal). 

      This describes some of the internal operations required for external components (such as instruments) to decide on actions they may be able to perform without interrupting the operation of the ENCL.
      
      <em>
      Discussion: The NFIRAOS Optical Enclosure environment is controlled by a PLC. When in 'Auto' mode it makes its own decisions regarding maintenance tasks, such as defrosting heating panels (CDPD). Since client instruments are open to the internal NFIRAOS environment, they are coupled to the states of this PLC. The only environmental maintenance task presently expected of IRIS is to defrost its cooling panels. In order to ensure that this task does not interfere with NFIRAOS, the NFIRAOS panel defrost schedule can include entries for the bottom port, side port, and top port instruments. If the PLC is in the auto mode, state is CDPD, and the first element of both instDefrost  and instConnected is True, then it is safe for IRIS to activate its panel defrost heater, provided it can finish before the published stateEnd timestamp, in International Atomic Time (TAI) / Precision Time Protocol (PTP), by which defrosting must finish. Otherwise it shall wait until the next time these values are published.

      Discussion: The Assembly has a configuration that will list what is connected at each port.
      </em>
      """
      maxRate         = 1
      archive         = true
      attributes      = [
        {
          name        = state
      	  description = """Enclosure refrigeration control state indicating the operation contol that is currently running under."""
      	  enum        = [ WARM, WRMQ, WRMS, WRMA, WRMP, WRMG, WMPQ, WRGD, WRGX, WRGQ, CLNG, CLGW, CLGE, CLGQ, CLGX, COLD, CLDS, CLDQ, CLDX, CDAS, CLDD, CDPD, SHDN, SHNG, UINT, SAFE ]
        }
        {
          name        = auto
      	  description = "Indicates that the enclosure is running under an autonomous mode and is free to perform maintenace activities."
      	  enum        = [ TRUE, FALSE ]
        }
        {
          name        = instDefrost
      	  description = "Indicates which instrument ports are free to defrost if required."
      	  type        = array
          dimensions: [3]
          items = {
             enum = [TRUE, FALSE]
          }
        }
        {
          name        = instConnected
      	  description = "Indicates which instrument ports are occupied by an instrument (BOTTOM=0, SIDE=1, TOP=2)."
      	  type        = array
          dimensions: [3]
          items = {
             enum = [TRUE, FALSE]
          }
        }
        {
          name        = connectedTopPort
      	  description = "This is the instrument currently mounted.  This is a configured value."
      	  enum        = [ NSEN, NOT_CONNECTED, UNKNOWN ]
        }
        {
          name        = connectedBottomPort
      	  description = "This is the instrument currently mounted.  This is a configured value."
      	  enum        = [ IRIS, NOT_CONNECTED, UNKNOWN ]
        }
        {
          name        = connectedSidePort
      	  description = "This is the instrument currently mounted.  This is a configured value."
      	  enum        = [ IRMS, NOT_CONNECTED, UNKNOWN ]
        }
        {
          name        = stateEnd
      	  description = "Estimated date/time the current autonomous mode will end (TAI/PTP) indicating all maintenance tasks must be completed.  Will be empty if autonomous mode is not acive."
      	  type        = double 
          units       = TAI/PTP
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = cmdStatus
      description     = """Recent command status. (engineering)"""
      maxRate         = 0.1
      archive         = true
      attributes      = [
        {
          name        = cmd
          description = Rrecent command name.
          type        = string
        }
        {
          name        = args
          description = Recent command arguments. Empty string if no arguments are supplied.
          type        = string
        }
        {
          name        = caller
          description = Recent command caller (if available).
          type        = string
        }
        {
          name        = runId
          description = Run ID associated with the recent command.
          type        = integer 
        }
        {
          name        = ack
          description = Recent command acknowledgement status.
          enum        = [ ACCEPTED, REJECTED ]
        }
        {
          name        = ackMsg
          description = Recent command acknowledgement message. Empty string if acknowledgement is ACCEPTED.
          type        = string
        }
        {
          name        = comp
          description = Recent command completion status.
          enum        = [ INPROGRESS, SUCCESS, FAILED, INTERRUPTED, REJECTED ]
        }
        {
          name        = compMsg
          description = Recent command completion message. Empty string if completion is INPROGRESS or SUCCESS.
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = temperature
      description     = """Temperature values at various locations inside and outside the optical enclosure. (internal)"""
      maxRate         = 0.1
      archive         = true
      attributes      = [

        {
          name        = inside
          description = "Air temperature inside the optical enclosure as reported by the refrigeration controller and the 1-Wire Sensor."
          type        = array
          dimensions: [2]
          items = {
             type = double
          }
          units = C
          minimum     = -40
          maximum     = 40
        }

        {
          name        = outside
          description = "Air temperature outside the optical enclosure and the 1-Wire Sensor."
          type        = array
          dimensions: [2]
          items = {
             type = double
          }
          units = C
          minimum     = -40
          maximum     = 40
        }

	    {
          name        = tablStub
          description = "The temperature of the TABL stub locations reported by the refrigeration controller and the 1-Wire Sensors."
          type        = array
          dimensions: [2,3]
          items = {
             type = double
          }
          units = C
          minimum     = -40
          maximum     = 40
        }

        {
          name        = bulkhead
          description = "The temperature of the bulkhead reported by the refrigeration controller and the 1-Wire Sensors."
          type        = array
          dimensions: [2]
          items = {
             type = double
          }
          units = C
          minimum     = -40
          maximum     = 40
        }

        {
          name        = auxAir
          description = "The temperature of the auxiliary air."
          type        = double
          units        = C
          minimum     = -40
          maximum     = 40
        }

        {
          name        = airBooster
          description = "The temperature of the air booster air."
          type        = double
          units        = C
          minimum     = -40
          maximum     = 40
        }

        {
          name        = panelColdPlate
          description = "The temperature of the cold plate inside the panels with two sensors each."
          type        = array
          dimensions: [58]
          items = {
             type = double
          }
          units = C
          minimum     = -40
          maximum     = 40
        }

	      {
          name        = panelOuterSkin
          description = "The temperature of the panels outer skin."
          type        = array
          dimensions: [58]
          items = {
             type = double
          }
          units = C
          minimum     = -40
          maximum     = 40
        }

        {
          name        = panelInnerSkin
          description = "The temperature of the panels inner skin."
          type        = array
          dimensions: [58]
          items = {
             type = double
          }
          units = C
          minimum     = -40
          maximum     = 40
        }

        {
          name        = ahu
          description = "The temperature of the AHU thermocouples."
          type        = array
          dimensions: [7]
          items = {
             type = double
          }
          units = C
          minimum     = -40
          maximum     = 40
        }

        {
          name        = liquidDetection
          description = "The temperature of the liquid detection thermocouple inside each panel with two sensors each."
          type        = array
          dimensions: [58]
          items = {
             type = double
          }
          units = C
          minimum     = -40
          maximum     = 40
        }

        {
          name        = refrigerantReheater
          description = "The temperature at the refrigerant reheater thermocouples."
          type        = array
          dimensions: [2]
          items = {
             type = double
          }
          units = C
          minimum     = -40
          maximum     = 40
        }

        {
          name        = inputWindow
          description = "The internal temperatures of the input window at both of the baffles."
          type        = array
          dimensions: [2]
          items = {
             type = double
          }
          units = C
          minimum     = -40
          maximum     = 40
        }

      ]
    }

#-----------------------------------------------------------------------

    {
      name            = pressure
      description     = """Pressure values at various locations inside and outside the optical enclosure. (engineering)"""
      maxRate         = 0.1
      archive         = true
      attributes      = [

        {
          name        = differential
          description = "The differential pressure at the four sides of the enclosure."
          type        = array
          dimensions: [4]
          items = {
             type = double
          }
          units = Pa
        }

        {
          name        = refrigerantSupply
          description = "The pressure of the refrigerant supply."
          type        = double
          units        = Pa
        }

        {
          name        = refrigerantReturn
          description = "The pressure of the refrigerant return."
          type        = double
          units        = Pa
        }

        {
          name        = ahuRefrigerantReturn
          description = "The pressure of the AHU refrigerant return."
          type        = double
          units        = Pa
        }

        {
          name        = ahuDifferential
          description = "The differential pressure of the AHU."
          type        = double
          units        = Pa
        }

	      {
          name        = panelRefrigerantReturn
          description = "The pressure of the panel refrigerant return."
          type        = double
          units        = Pa
        }

	{
          name        = componentRefrigerantReturn
          description = "The pressure of the refrigerant return for VCAM and the various components within the ENCL."
          type        = double
          units        = Pa
        }

        {
          name        = inputWindow
          description = "Pressure inside the NFIRAOS input window."
          type        = double
          units        = Pa
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = airSpeed
      description     = """The air speed measured at different locations within the enclosure. (engineering)"""
      maxRate         = 0.1
      archive         = true
      attributes      = [

        {
          name        = ahu
          description = "The air speed within the AHU."
          type        = double
          units        = m/s
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = switches
      description     = """The state of various switches within the enclosure. (engineering)"""
      maxRate         = 0.1
      archive         = true
      attributes      = [

        {
          name        = light
          description = "The light switch controlling the lights in the enclosure."
          type        = array
          dimensions: [2]
          items = {
             enum     = [ ON, OFF, UNKNOWN ]
          }
        }

        {
          name        = sideVestibuleLight
          description = "The light switch controlling the side vestibule lights."
          type        = array
          dimensions: [2]
          items = {
             enum     = [ ON, OFF, NOTCONNECTED, UNKNOWN ]
          }
        }

        {
          name        = sideVestibuleAhuFan
          description = "The switch controlling the side vestibule AHU fan."
          type        = array
          dimensions: [2]
          items = {
             enum     = [ ON, OFF, NOTCONNECTED, UNKNOWN ]
          }
        }

        {
          name        = sideVestibuleAirHose
          description = "The switch controlling the side vestibule air hose flow."
          enum     = [ ON, OFF, NOTCONNECTED, UNKNOWN ]
        }

        {
          name        = roofVestibuleAhuFan
          description = "The switch controlling the roof vestibule AHU fan."
          type        = array
          dimensions: [2]
          items = {
             enum     = [ ON, OFF, NOTCONNECTED, UNKNOWN ]
          }
        }

        {
          name        = roofVestibuleAirHose
          description = "The switch controlling the roof vestibule air hose flow."
          enum     = [ ON, OFF, NOTCONNECTED, UNKNOWN ]
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = dewFrostPoint
      description     = """The data from the dew sensors of the optical enclosure, the computed dew/frost point (whichever is most relevant), and related surface temperature. (internal)

      Note that the surface temperatures here may replicated from some data in the general encl.temperature event. The data is repeated here to present a clear and consisted view of dew/frost point alarms and notable events.

      <em>
      Discussion: Frost point is germane below 0<sup>&deg;</sup>C and dewpoint applies above freezing.  Condensation temperature (Frost and dew point ) is a  more directly useful measurement of water vapour than relative humidity --  if the air temperature is below the condensation point, then water will precipitate.
      </em>
"""
      maxRate         = 0.1
      archive         = true
      attributes      = [
        {
          name        = interior
          description = "The dew/frost point in the interior of the optical enclosure."
          type        = double
          units       = C
          minimum     = -50
          maximum     = 50
        }

        {
          name        = interiorAirTemperature
          description = "The temperature measured by the dew point sensor in the interior of the optical enclosure."
          type        = double
          units       = C
          minimum     = -40
          maximum     = 40
        }

        {
          name        = interiorHumidity
          description = "The humidity level measured by the dew point sensor in the interior of the optical enclosure."
          type        = double
          units       = %
          minimum     = 0
          maximum     = 100
        }

        {
          name        = table
          description = "The dew/frost point at the table."
          type        = double
          units       = C
          minimum     = -50
          maximum     = 50
        }

        {
          name        = tableAirTemperature
          description = "The temperature measured by the dew point sensor at the table"
          type        = double
          units       = C
          minimum     = -40
          maximum     = 40
        }

        {
          name        = tableHumidity
          description = "The humidity level measured by the dew point sensor at the table."
          type        = double
          units       = %
          minimum     = 0
          maximum     = 100
        }

        {
          name        = tableSurfaceTemperature
          description = "The temperature measured by the surface sensor at the table"
          type        = double
          units       = C
          minimum     = -40
          maximum     = 40
        }


	    {
          name        = ahu
          description = "The dew/frost point in the interior of the optical enclosure AHU."
          type        = double
          units       = C
          minimum     = -50
          maximum     = 50
        }

        {
          name        = ahuAirTemperature
          description = "The temperature measured by the dew point sensor in the interior of the optical enclosure AHU."
          type        = double
          units       = C
          minimum     = -40
          maximum     = 40
        }

        {
          name        = ahuHumidity
          description = "The humidity level measured by the dew point sensor in the interior of the optical enclosure AHU."
          type        = double
          units       = %
          minimum     = 0
          maximum     = 100
        }

        {
          name        = ahuSurfaceTemperature
          description = "The temperature measured by the surface sensor in the interior of the optical enclosure AHU."
          type        = double
          units       = C
          minimum     = -40
          maximum     = 40
        }

        {
          name        = panel
          description = "The dew/frost point of the individual panels."
          type        = array
          dimensions: [58]
          items = {
            type        = double
          }
          units       = C
          minimum     = -50
          maximum     = 50
        }

        {
          name        = panelAirTemperature
          description = "The temperature measured by the dew point sensor in the interior of the optical enclosure on each panel."
          type        = array
          dimensions: [58]
          items = {
            type        = double
          }
          units       = C
          minimum     = -40
          maximum     = 40
        }

        {
          name        = panelHumidity
          description = "The humidity level measured by the dew point sensor in the interior of the optical enclosure on each panel."
          type        = array
          dimensions: [58]
          items = {
            type        = double
          }
          units       = %
          minimum     = 0
          maximum     = 100
        }

         {
          name        = panelSurfaceTemperature
          description = "The temperature measured by the surface sensor in the interior of the optical enclosure on each panel."
          type        = array
          dimensions: [58]
          items = {
            type        = double
          }
          units       = C
          minimum     = -40
          maximum     = 40
        }

        {
          name        = instPort
          description = "The dew/frost point of the individual instrument ports. Values are order [top, side, bottom]"
          type        = array
          dimensions: [3]
          items = {
            type        = double
          }
          units       = C
          minimum     = -50
          maximum     = 50
        }

        {
          name        = instPortAirTemperature
          description = "The temperature measured by the dew point sensor in the interior of the optical enclosure on each instrument port. Values are order [top, side, bottom]"
          type        = array
          dimensions: [3]
          items = {
            type        = double
          }
          units       = C
          minimum     = -40
          maximum     = 40
        }

        {
          name        = instPortHumidity
          description = "The humidity level measured by the dew point sensor in the interior of the optical enclosure on each instrument port. Values are order [top, side, bottom]"
          type        = array
          dimensions: [3]
          items = {
            type        = double
          }
          units       = %
          minimum     = 0
          maximum     = 100
        }

         {
          name        = instPortSurfaceTemperature
          description = "The temperature measured by the surface sensor in the interior of the optical enclosure on each  instrument port. Values are order [top, side, bottom]"
          type        = array
          dimensions: [3]
          items = {
            type        = double
          }
          units       = C
          minimum     = -40
          maximum     = 40
        }
  
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = doors
      description     = "The state of the doors into the ENCL. (engineering)"
      maxRate         = 0.1
      archive         = true
      attributes      = [

        {
          name        = state
          description = "The state of the doors into the ENCL."
          type        = array
          dimensions: [2]
          items = {
             enum     = [ OPEN, CLOSED, UNKNOWN ]
          }
        }

	    {
          name        = locked
          description = "Indicates if the door is locked or unlocked."
          type        = array
          dimensions: [2]
          items = {
             type     = boolean
          }
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = portGate
      description     = "The current state of the port gate valves."
      maxRate         = 0.1
      archive         = true
      attributes      = [

        {
          name        = topPortGateState
          description = "The state of the top port gate valve."
          enum     = [ OPEN, CLOSED, UNKNOWN ]
        }

	    {   
          name        = sidePortGateState
          description = "The state of the side port gate valve."
          enum     = [ OPEN, CLOSED, UNKNOWN ]
        }

        {
          name        = bottomPortGateState
          description = "The state of the bottom port gate valve."
          enum     = [ OPEN, CLOSED, UNKNOWN ]
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = inputShutter
      description     = "The current state of the input shutter."
      maxRate         = 0.1
      archive         = true
      attributes      = [
        {
          name        = shutterState
          description = "The state of the input window."
          enum     = [ OPEN, CLOSED, UNKNOWN ]
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = inputWindow
      description     = "The current state of the input window thermal control system. (engineering)"
      maxRate         = 0.1
      archive         = true
      attributes      = [

        {
          name        = heaterState
          description = "The state of the heaters inside the input window. (engineering)"
          type        = array
          dimensions: [2]
          items = {
             enum     = [ ON, OFF, UNKNOWN ]
          }
        }

        {
          name        = coolerState
          description = "The state of the coolers inside the input window. (engineering)"
          type        = array
          dimensions: [2]
          items = {
             enum     = [ ON, OFF, UNKNOWN ]
          }
        }

        {
          name        = diodePumpState
          description = "The state of the diode pump status. (engineering)"
          enum     = [ ON, OFF, UNKNOWN ]
        }
      ]
    }

#-----------------------------------------------------------------------

    {
      name            = coolingConditions
      description     = """An event signaling the cooling conditions required by the enclosure.  This event details the required parameters on what is expected in relation to cooling conditions and supply."""
      maxRate         = 0.1
      archive         = true
      attributes      = [
        {
          name        = pressureLevelRequired
          description = """Indicates the minimum cooling supply pressure level expected by the enclosure to operate under the current state and conditions.  This refers to the pressure level the ENCL will require from the observatory and it is expected that the observatory will change/control the supplied pressure based on this value."""
          enum        = [ HIGH, LOW, ANY ]
        }
      ]
    }


#-----------------------------------------------------------------------
  
    {
      name            = refrigerantLeak
      description     = """The refrigerant leak state as related to the containment of the coolant.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------
  
    {
      name            = smoke
      description     = """The current state of the smoke detected in the enclosure.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = state
          description = "State of the Notable Event"
          type        = boolean
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------
  
    {
      name            = interiorPressureLimit
      description     = """The interior pressure relative to the outside pressure is in an unsafe limit

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = state
          description = "Pressure limit state of the Notable Event"
          enum        = [CRITICAL_LOW, URGENT_LOW, WARNING_LOW, NORMAL, WARNING_HIGH, URGENT_HIGH, CRITICAL_HIGH]
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------
  
    {
      name            = tableDewFrostLimit
      description     = """The status of the table temperature related to approaching the dew/frost point.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = state
          description = "Temperature limit with respect to dew/frost point state of the Notable Event"
          enum        = [NORMAL, WARNING, URGENT, CRITICAL]
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }


#-----------------------------------------------------------------------
  
    {
      name            = panelDewFrostLimit
      description     = """The overall status of the panel temperatures related to approaching the dew/frost point.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = state
          description = "Temperature limit of one or more panels with respect to dew/frost point state of the Notable Event. This state is set to the most severe value of all panel. (e.g. if one panel is CRITICAL, the two neighbouring panels are WARNING and all other panels are OKAY, then the overall state is CRITICAL)"
          enum        = [NORMAL, WARNING, URGENT, CRITICAL]
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------
  
    {
      name            = instPortDewFrostLimit
      description     = """The status of the individual instrument ports temperature related to approaching the dew/frost point.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = state
          description = "Temperature limit of each instrument port with respect to dew/frost point state of the Notable Event. The states are order [top, side, bottom]"
          type        = array
          dimensions: [3]
          items = {
             enum     = [NORMAL, WARNING, URGENT, CRITICAL]
          }
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------
  
    {
      name            = ahuDewFrostLimit
      description     = """The status of the AHU temperature related to approaching the dew/frost point.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = state
          description = "Temperature limit with respect to dew/frost point state of the Notable Event"
          enum        = [NORMAL, WARNING, URGENT, CRITICAL]
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }


#-----------------------------------------------------------------------
  
    {
      name            = maintenanceRequired
      description     = """The enclosure requires maintenance tasks such as dehumidify, defrost, or exhaust.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = state
          description = "The maintenance required states of the Notable Event.  The states are order [dehumidify, defrost, exhaust]"
           type        = array
          dimensions: [3]
          items = {
             enum      = [NORMAL, WARNING, URGENT, CRITICAL]
          }
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------
  
    {
      name            = carbonDioxideLevel
      description     = """The status of the level of carbon dioxide in the enclosure.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = state
          description = "The carbon dioxide level states of the Notable Event."
          enum        = [NORMAL, WARNING, URGENT, CRITICAL]
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

#-----------------------------------------------------------------------
  
    {
      name            = oxygenLevel
      description     = """The status of the level of oxygen in the enclosure.

*Notable Event.*"""
      maxRate         = 20
      archive         = true
      attributes      = [
        {
          name        = state
          description = "The oxygen level states of the Notable Event."
          enum        = [NORMAL, WARNING, URGENT, CRITICAL]
        }
        {
          name        = msg
          description = "Error message describing the Notable Event"
          type        = string
        }
      ]
    }

  ] 

#-----------------------------------------------------------------------
#-----------------------------------------------------------------------  
# alarms
i
  alarms = [

#-----------------------------------------------------------------------

    {
      name = watchdog
      description = "Assembly has become unresponsive"
      severityLevels = [Major]
      location = "TBD..."
      alarmType = Calculated
      probableCause = "Software bug."
      operatorResponse = "__Major__: Re-start the assembly and file a bug report."
      autoAck  = false
      latched = true
    }

#-----------------------------------------------------------------------

    {
      name = temperature
      description = "EE air temperature is outside acceptable limits and is approaching the dew/frost point.  This may result in damaged equipment or electronics failure."
      severityLevels = [Major, Minor]
      location = "TBD..."
      alarmType = Calculated
      probableCause = "The coolant system is not operating properly."
      operatorResponse = """<ul>
                              <li><b>Major:</b>Shutdown computer systems and electronics and check coolant system and supply.</li>
                              <li><b>Minor:</b>Review operation of the cooling system to ensure fans and temperatures are running under normal operational conditions and the coolant is flowing correctly. Ensure enclosure doors are closed properly during operation. Also ensure 1-Wire reading match the reading taken from the refrigeration controller.</li>
                            </ul>"""
      autoAck  = false
      latched = true
    }

#-----------------------------------------------------------------------

    {
      name = oxygen
      description = "ENCL Assembly oxygen level alarm where oxygen levels are below acceptable levels."
      severityLevels = [Major]
      location = "TBD..."
      alarmType = Calculated
      probableCause = "Occupancy of the enclosure too high for current air circulation. May indicate leak in refrigerant."
      operatorResponse = """<ul>
                              <li><b>Major:</b>Immediately evacuate the enclosure.  Increase airflow of the air handling unit to circulate air faster and open doors.  Shutdown coolant supplies to enclosure.</li>
                              <li><b>Minor:</b>Increase airflow within the enclosure.  Remove occupants from the enclosure and monitor is oxygen levels recover.  If unoccupied, verify sources of other gases are restricted.</li>
                            </ul>"""
      autoAck  = false
      latched = true
    }

#-----------------------------------------------------------------------

    {
      name = carbonDioxideLevel
      description = "ENCL Assembly alarm for when carbon dioxide levels reach an unacceptable level."
      severityLevels = [Major, Minor]
      location = "TBD..."
      alarmType = Calculated
      probableCause = "Occupancy of the enclosure too high for current air circulation or leak in refrigerant."
      operatorResponse = “””<ul>
                              <li><b>Major:</b>Immediately evacuate the enclosure. Increase airflow of the air handling unit to circulate air and open doors. Shutdown coolant supplies to enclosure.</li>
                              <li><b>Minor:</b>Increase airflow within the enclosure.  Remove occupants from the enclosure.  If empty, verify sources of other gases are restricted.</li>
                            </ul>”””
      autoAck  = false
      latched = true
    }

#-----------------------------------------------------------------------

    {
      name = smoke
      description = "ENCL Assembly smoke alarm."
      severityLevels = [Major]
      location = "TBD..."
      alarmType = Calculated
      probableCause = "Fire in the enclosure or overheated equipment resulting in smoke."
      operatorResponse = "__Major__: Immediately evacuate the enclosure.  Shutdown all motors and electrical equipment within the enclosure. Close all doors/hatches/ports to the enclosure."
      autoAck  = false
      latched = true
    }

    {
      name = refrigerantLeak
      description = "ENCL Assembly refrigerant leak alarm."
      severityLevels = [Major]
      location = "TBD..."
      alarmType = Calculated
      probableCause = "Leak in the refrigerant lines or valves."
      operatorResponse = "__Major__: Immediately evacuate the enclosure and shutdown all motors, optics, and electrical equipment within the enclosure. Stop all refrigeration to NFIRAOS."
      autoAck  = false
      latched = true
    }

#-----------------------------------------------------------------------

    {
      name = pressure
      description = "ENCL Assembly differential pressure alarm.  The pressure inside the enclosure is less than the pressure outside of the enclosure."
      severityLevels = [Major]
      location = "TBD..."
      alarmType = Calculated
      probableCause = "Door or hatch is open in the enclosure or auxiliary air into enclosure has stopped/blocked."
      operatorResponse = "__Major__: Close all doors, hatches, and port to the enclosure and turn on auxiliary air/air booster."
      autoAck  = false
      latched = true
    }

#-----------------------------------------------------------------------

    {
      name = temperatureTABLStub
      description = "ENCL Assembly for one of three Table Stub positions to indicate the temperature is dangerously close to the dew point."
      severityLevels = [Major, Minor]
      location = "TBD..."
      alarmType = Calculated
      probableCause = "Cooling is not being performed properly within the enclosure.  Coolant to TABL is running too high causing cold spots or internal temperature of enclosure is rising too quickly."
      operatorResponse = “””<ul>
                              <li><b>Major:</b>Close all doors, hatches, and port to the enclosure to maintain stable temperature.  Suspend cooling or warming of ENCL and stop/start coolant to TABL structure to reduce air/TABL temperature difference.</li>
                              <li><b>Minor:</b>Ensure coolant is supplied to TABL structure is flowing correctly.</li>
                            </ul>”””
      autoAck  = false
      latched = true
    }

#-----------------------------------------------------------------------

    {
      name = temperatureInstrumentPort
      description = "Temperature to port gate has reached a point where condensation may form."
      severityLevels = [Major, Minor]
      location = "TBD..."
      alarmType = Calculated
      probableCause = "Port gate valve has been opened without anything attached to port.  Missing port plug.  Heater/coolant has failed for valve."
      operatorResponse = “””<ul>
                              <li><b>Major:</b>Close port gate value and attach port plug if possible.</li>
                              <li><b>Minor:</b>Ensure heater/coolant in port is functioning.  Ensure instruments/port plug are properly in place.</li>
                            </ul>”””
      autoAck  = false
      latched = true
    }

#-----------------------------------------------------------------------

    {
      name = temperatureInputWindow
      description = "Temperature to the input window has reached a point where condensation or turbulence may form."
      severityLevels = [Major]
      location = "TBD..."
      alarmType = Calculated
      probableCause = "The input window pressure may have dropped or coolant/heaters may not be operating correctly."
      operatorResponse = "__Major__: Close input window shutter and verify heaters, pumps, and coolers are operating correctly."
      autoAck  = false
      latched = true
      archive = true
    }

    {
      name = panelTemperatureOuterSkin
      description = "ENCL Assembly for one of the enclosure panel outer skins has reached a point where frost/dew is forming."
      severityLevels = [Major, Minor]
      location = "TBD..."
      alarmType = Calculated
      probableCause = "Heaters/Coolant for the panel may be inactive/failing.  Dehumidify has not been successfully run."
      operatorResponse = “””<ul>
                              <li><b>Major:</b>Close all entrances to enclosure and initialize panel defrost cycle followed by a dehumidify operation.</li>
                              <li><b>Minor:</b>Schedule a defrost and dehumidify cycle of the enclosure.  Initiate cooling/heating of panel and monitor for corresponding temperature change.</li>
                            </ul>”””
      autoAck  = false
      latched = true
    }

#-----------------------------------------------------------------------

    {
      name = ahuTemperature 
      description = "Air Handling Unit Temperature sensor alarm to indicate the temperature is dangerously close to the dew point."
      severityLevels = [Major, Minor]
      location = "TBD..."
      alarmType = Calculated
      probableCause = "AHU has been running inactive for long period of time."
      operatorResponse = “””<ul>
                              <li><b>Major:</b>Close all entrances to enclosure and allow AHU to circulate air/perform maintenance depending on temperature state of enclosure.</li>
                              <li><b>Minor:</b>Turn on fans of AHU to circulate air withing enclosure.</li>
                            </ul>”””
      autoAck  = false
      latched = true
    }

#-----------------------------------------------------------------------

    {
      name = temperatureDifferential
      description = "A temperature differential has been detected between the ENCL 1-Wire Sensors and the sensors of the refrigeration controller."
      severityLevels = [Minor]
      location = "TBD..."
      alarmType = Calculated
      probableCause = "Temperature sensors may be reporting inaccurate results or are failing."
      operatorResponse = "__Minor__: Check the temperature values returned by all temperature sensors to ensure accurate readings."
      autoAck  = false
      latched = true
    }

#-----------------------------------------------------------------------

    {
      name = maintenanceRequired
      description = "The ENCL is requiring a maintenance task such as defrosting components or dehumidifying the air."
      severityLevels = [Major, Minor]
      location = "TBD..."
      alarmType = Calculated
      probableCause = "The ENCL has been running in standby too long and requires maintenance tasks."
      operatorResponse = “””<ul>
                              <li><b>Major:</b>Immediately turn off engineering mode, set the enclosure to run in autonomous mode, or perform a dehumidify, defrost, and exhaust task.</li>
                              <li><b>Minor:</b>Schedule a time to allow the ENCL to run in an automated state.</li>
                            </ul>”””
      autoAck  = false
      latched = true
    }
  ]

}
